{"ast":null,"code":"var _jsxFileName = \"G:\\\\documents\\\\crown-clothing\\\\crwn-clothing-estore\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverView from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverView);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/'); // collectionRef.get().then(snapshot => {\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n    //   updateCollections(collectionsMap)\n    //   this.setState({ loading: false })\n    // })\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverViewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["G:/documents/crown-clothing/crwn-clothing-estore/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","WithSpinner","CollectionsOverView","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","CollectionsOverViewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,MAAMC,8BAA8B,GAAGN,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMM,yBAAyB,GAAGP,WAAW,CAACE,cAAD,CAA7C;;AAIA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACRC,MAAAA,OAAO,EAAE;AADD,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAER,MAAAA;AAAF,QAAuB,KAAKS,KAAlC;AACA,UAAMC,aAAa,GAAGZ,SAAS,CAACa,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,6FAAD,CAAL,CAJkB,CAOlB;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKL,KAAvB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAES,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGN,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEH;AAA3C,SAAwDG,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEK,KAAK,CAACC,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAEN,KAAK,iBACX,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEH;AAAtC,SAAmDG,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAWD;;AAnCoC;;AAsCvC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACtCjB,EAAAA,iBAAiB,EAAEkB,cAAc,IAC/BD,QAAQ,CAACjB,iBAAiB,CAACkB,cAAD,CAAlB;AAF4B,CAAL,CAAnC;;AAKA,eAAexB,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nimport CollectionsOverView from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap\r\n} from '../../firebase/firebase.utils'\r\n\r\nimport { updateCollections } from '../../redux/shop/shop.actions'\r\n\r\nconst CollectionsOverViewWithSpinner = WithSpinner(CollectionsOverView)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n  loading: true\r\n}\r\n\r\n  unsubscribeFromSnapshot = null\r\n\r\n  componentDidMount() {\r\n    const { updateCollections} = this.props\r\n    const collectionRef = firestore.collection('collections')\r\n\r\n    fetch('https://firestore.googleapis.com/v1/projects/YOUR_PROJECT_ID/databases/(default)/documents/'\r\n    )\r\n\r\n    // collectionRef.get().then(snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n    //   updateCollections(collectionsMap)\r\n    //   this.setState({ loading: false })\r\n    // })\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    const {loading} = this.state\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverViewWithSpinner isLoading={loading} {...props} />} />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={props => (\r\n            <CollectionPageWithSpinner isLoading={loading} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}  \r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}