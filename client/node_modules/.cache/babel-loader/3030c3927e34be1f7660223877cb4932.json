{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n  } catch (error) {} // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\n  //   dispatch(fetchCollectionsSuccess(collectionsMap))\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["G:/documents/crown-clothing/crwn-clothing-estore/src/redux/shop/shop.sagas.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","error","fetchCollectionsStart","FETCH_COLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACF,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AAED,GALD,CAKE,OAAOG,KAAP,EAAc,CAEf,CAVsC,CAcrC;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMjB,SAAS,CACbO,eAAe,CAACW,sBADH,EAEbV,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects'\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\nimport {\r\n  fetchCollectionsSuccess,\r\n  fetchCollectionsFailure\r\n} from './shop.actions'\r\n\r\nimport ShopActionTypes from './shop.types'\r\n\r\nexport function* fetchCollectionsAsync() {\r\n  yield console.log('I am fired')\r\n\r\n  try {\r\n    const collectionRef = firestore.collection('collections')\r\n    const snapshot = yield collectionRef.get()\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot)\r\n\r\n  } catch (error) {\r\n\r\n  }\r\n\r\n  \r\n\r\n    // collectionRef\r\n    //   .get()\r\n    //   .then(snapshot => {\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n    //   dispatch(fetchCollectionsSuccess(collectionsMap))\r\n    //   })\r\n    //   .catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n  yield takeEvery(\r\n    ShopActionTypes.FETCH_COLECTIONS_START,\r\n    fetchCollectionsAsync\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}