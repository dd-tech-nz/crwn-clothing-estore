{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '..';\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  pauload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["G:/documents/crown-clothing/crwn-clothing-estore/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","collectionsMap","type","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsStart","FETCH_COLLECTIONS_START","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","pauload","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,IAA3D;AAEA,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACxDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,yBADkC;AAExDC,EAAAA,OAAO,EAAEH;AAF+C,CAAL,CAA9C;AAKP,OAAO,MAAMI,qBAAqB,GAAG,OAAO;AAC1CH,EAAAA,IAAI,EAAEL,eAAe,CAACS;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,YAAY,KAAK;AACtDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA5C;AAKP,OAAO,MAAMG,0BAA0B,GAAG,MAAM;AAC9C,SAAOC,QAAQ,IAAI;AACjB,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACP,qBAAqB,EAAtB,CAAR;AAEAQ,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACnC,YAAMhB,cAAc,GAAGF,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACZ,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGiB,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACL,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAID,GARD;AASD,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\r\n\r\nimport { firestore, convertCollectionsSnapshotToMap } from '..'\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n  pauload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return dispatch => {\r\n    const collectionRef = firestore.collection('collections')\r\n    dispatch(fetchCollectionsStart())\r\n\r\n    collectionRef.get().then(snapshot => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot)\r\n      dispatch(fetchCollectionsSuccess(collectionsMap))\r\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}